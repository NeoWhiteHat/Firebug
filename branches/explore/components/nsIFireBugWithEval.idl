/* See license.txt for terms of usage */

#include "nsISupports.idl" 
#include "nsIFirebug.idl"

interface jsdIStackFrame;
interface jsdIScript;
interface jsdIValue;
interface nsIDOMWindow;

[scriptable, uuid(E978E44E-9158-4894-B92D-73ABF5F48DB0)]
interface nsIFireBugDebuggerWithEval : nsIFirebugDebugger
{
  /* 
   * Called when a eval-level function (script) it ready to run.
   * in frame from breakpoint hook in PC=0 of TopLevel scriptl
   * out file name to bind to all scripts from this TopLevel
   */
  unsigned long onEval(in jsdIStackFrame frame, out jsdIValue val);
  /*
   * A script created by an eval is created; 
   *   url is eval-level script url,
   *   lineNo is first line of script relative to first line of url,
   *   script is jsd object for script with fileName and baseLineNumber of old
   */
  void onEvalScript(in string url, in unsigned long lineNo, in jsdIScript script);
  /* 
   * Called when a top-level function (script) it ready to run.
   * in frame from breakpoint hook in PC=0 of TopLevel script
   * out file name to bind to all scripts from this TopLevel
   */
  unsigned long onTopLevel(in jsdIStackFrame frame, out jsdIValue val);
  /*
   * A script created by compiling top-level is created; 
   *   url is top-level script url form onTopLevel
   *   lineNo is first line of script relative to first line of url,
   *   script is jsd object for script with fileName and baseLineNumber of old
   */
  void onTopLevelScript(in string url, in unsigned long lineNo, in jsdIScript script);
  /*
   * Called when a browser-generated event script is created
   * in frame from breakpoint hook in PC=0 of eventLevel script
   * out file name to bind to all scripts from this eventLevel   */
  unsigned long onEventScript(in jsdIStackFrame frame, out jsdIValue val);
};

[scriptable, uuid(1E4FDF9C-C5F9-423c-B313-AA4A4542760E)]
interface nsIFireBugWithEval : nsIFirebug 
{
    void registerDebuggerWithEval(in nsIFireBugDebuggerWithEval debugger);
    void unregisterDebuggerWithEval(in nsIFireBugDebuggerWithEval debugger);
};
