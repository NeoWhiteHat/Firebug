/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is McCoy.
 *
 * The Initial Developer of the Original Code is
 * the Mozilla Foundation <http://www.mozilla.org/>.
 * Portions created by the Initial Developer are Copyright (C) 2007
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Dave Townsend <dtownsend@oxymoronical.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

interface nsISimpleEnumerator;

[scriptable, uuid(73ff0fc6-3895-498a-b149-f2c09f7f889b)]
interface nsIKeyPair : nsISupports
{
  const PRUint32 KEYTYPE_RSA = 1;
  const PRUint32 KEYTYPE_DSA = 2;
  
  const PRUint32 HASHTYPE_MD2    = 1;
  const PRUint32 HASHTYPE_MD5    = 2;
  const PRUint32 HASHTYPE_SHA1   = 3;
  const PRUint32 HASHTYPE_SHA256 = 4;
  const PRUint32 HASHTYPE_SHA384 = 5;
  const PRUint32 HASHTYPE_SHA512 = 6;
  
  attribute ACString name;
  
  readonly attribute PRUint32 type;
  
  ACString exportPublicKey();
  
  ACString signData(in ACString aData, in PRUint32 aHashType);
  
  boolean verifyData(in ACString aData, in ACString aSignature);
  
  void delete();
};

[scriptable, uuid(58b3c67c-282c-414d-abbf-926b834fcd12)]
interface nsIKeyService : nsISupports
{
  void changePassword();
  
  nsISimpleEnumerator enumerateKeys();
  
  nsIKeyPair createKeyPair(in PRUint32 aKeyType);
};
